name: Continuous integration

on:
  push:
    branches: [main, develop]
    paths:
      - "src/**"
      - "infra/**"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "src/**"
      - "infra/**"
      - ".github/workflows/ci.yml"
permissions:
  id-token: write
  contents: read

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Checkout sources

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: src/main/webui/package-lock.json

      - name: Setup FFmpeg
        uses: AnimMouse/setup-ffmpeg@v1

      - name: Run Maven build
        run: |
          ./mvnw clean verify -Dquarkus.test.profile=test -Dquarkus.container-image.tag=1.0.0-${{ github.sha }} -Dquarkus.container-image.build=true
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
          QUARKUS_LANGCHAIN4J_AZURE_OPENAI_RESOURCE_NAME: ${{ secrets.QUARKUS_LANGCHAIN4J_AZURE_OPENAI_RESOURCE_NAME }}
          QUARKUS_LANGCHAIN4J_AZURE_OPENAI_DEPLOYMENT_NAME: ${{ secrets.QUARKUS_LANGCHAIN4J_AZURE_OPENAI_DEPLOYMENT_NAME }}
          QUARKUS_LANGCHAIN4J_AZURE_OPENAI_API_KEY: ${{ secrets.QUARKUS_LANGCHAIN4J_AZURE_OPENAI_API_KEY }}
          NEWSCAST_LOCATIONS_FFMPEG: ffmpeg
          CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
          VITE_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}

      - name: Login to container registry
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY }}
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Push container image
        if: github.ref == 'refs/heads/main'
        run: docker push ${{ secrets.CONTAINER_REGISTRY }}/agenttalks/agenttalks-app:1.0.0-${{ github.sha }}
