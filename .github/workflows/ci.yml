name: Continuous integration

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'content-api/**'
      - 'podcast-api/**'
      - 'reader-api/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'content-api/**'
      - 'podcast-api/**'
      - 'reader-api/**'
      - '.github/workflows/ci.yml'
permissions:
  id-token: write
  contents: read

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      name: Checkout sources
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Setup FFmpeg
      uses: AnimMouse/setup-ffmpeg@v1

    - name: Run Maven build
      run: |
        export GIT_HASH=$(git rev-parse --short HEAD)
        ./mvnw clean verify -Dquarkus.test.profile=test -Dquarkus.container-image.tag=1.0.0-${{ github.sha }}
      env:
        TESTCONTAINERS_RYUK_DISABLED: true
        QUARKUS_LANGCHAIN4J_AZURE_OPENAI_RESOURCE_NAME: ${{ secrets.QUARKUS_LANGCHAIN4J_AZURE_OPENAI_RESOURCE_NAME }}
        QUARKUS_LANGCHAIN4J_AZURE_OPENAI_DEPLOYMENT_NAME: ${{ secrets.QUARKUS_LANGCHAIN4J_AZURE_OPENAI_DEPLOYMENT_NAME }}
        QUARKUS_LANGCHAIN4J_AZURE_OPENAI_API_KEY: ${{ secrets.QUARKUS_LANGCHAIN4J_AZURE_OPENAI_API_KEY }}
        NEWSCAST_LOCATIONS_FFMPEG: ffmpeg
        CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}

    # A separate identity is used to push the container images to the registry.
    # This will need to be replaced with a federated identity in the future.
    - name: Login to container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.CONTAINER_REGISTRY }}
        username: ${{ secrets.AZURE_CLIENT_ID }}
        password: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Push content-api container image
      # if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      working-directory: content-api
      run: docker push ${CONTAINER_REGISTRY}/newscast/content-api:1.0.0-${{ github.sha }}
      env:
        CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}

    - name: Push reader-api container image
      # if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      working-directory: reader-api
      run: docker push ${{ secrets.CONTAINER_REGISTRY }}/newscast/reader-api:1.0.0-${{ github.sha }}
      env:
        CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
    
    - name: Push podcast-api container image
      # if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      working-directory: podcast-api
      run: docker push ${{ secrets.CONTAINER_REGISTRY }}/newscast/podcast-api:1.0.0-${{ github.sha }}
      env:
        CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
    

  deploy-to-test:
    # if:  ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    name: Deploy to Azure Test Environment
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: test
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install azd
        uses: Azure/setup-azd@v2

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      - name: Provision Infrastructure
        run: az deployment sub create -n "deploy-commit-${{ github.sha }}" --resource-group rg-newscast-shared --template-file infra/main.bicep --parameters infra/main.bicepparam
        env:
          GIT_HASH: ${{ github.sha }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
          AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
          DATABASE_ADMIN_USER: ${{ secrets.DATABASE_ADMIN_USER }}
          DATABASE_ADMIN_PASSWORD: ${{ secrets.DATABASE_ADMIN_PASSWORD }}